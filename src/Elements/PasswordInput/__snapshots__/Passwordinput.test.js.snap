// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordInput snapshots snap 1 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <p
        class="control has-icons-left has-icons-right"
      >
        <input
          autocomplete="new-password"
          class="input "
          data-testid="passwordInput"
          name="testPassword "
          placeholder="Password"
          required=""
          type="password"
          value=""
        />
        <span
          class="icon is-small is-left"
        >
          <i
            class="fas fa-lock"
          />
        </span>
        
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="control has-icons-left has-icons-right"
    >
      <input
        autocomplete="new-password"
        class="input "
        data-testid="passwordInput"
        name="testPassword "
        placeholder="Password"
        required=""
        type="password"
        value=""
      />
      <span
        class="icon is-small is-left"
      >
        <i
          class="fas fa-lock"
        />
      </span>
      
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`snap 2 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <p
        class="control has-icons-left has-icons-right"
      >
        <input
          autocomplete="new-password"
          class="input is-danger"
          data-testid="passwordInput"
          name="testPassword"
          placeholder="Password"
          required=""
          type="password"
          value="wrong"
        />
        <span
          class="icon is-small is-left"
        >
          <i
            class="fas fa-lock"
          />
        </span>
        <span
          class="icon is-small is-right"
          data-testid="password.hasError"
        >
          <i
            class="fas fa-exclamation-triangle"
          />
        </span>
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="control has-icons-left has-icons-right"
    >
      <input
        autocomplete="new-password"
        class="input is-danger"
        data-testid="passwordInput"
        name="testPassword"
        placeholder="Password"
        required=""
        type="password"
        value="wrong"
      />
      <span
        class="icon is-small is-left"
      >
        <i
          class="fas fa-lock"
        />
      </span>
      <span
        class="icon is-small is-right"
        data-testid="password.hasError"
      >
        <i
          class="fas fa-exclamation-triangle"
        />
      </span>
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`snap 3 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <p
        class="control has-icons-left has-icons-right"
      >
        <input
          autocomplete="new-password"
          class="input is-success"
          data-testid="passwordInput"
          name="testPassword"
          placeholder="Password"
          required=""
          type="password"
          value="123456789"
        />
        <span
          class="icon is-small is-left"
        >
          <i
            class="fas fa-lock"
          />
        </span>
        <span
          class="icon is-small is-right"
          data-testid="password.success"
        >
          <i
            class="fas fa-check"
          />
        </span>
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="control has-icons-left has-icons-right"
    >
      <input
        autocomplete="new-password"
        class="input is-success"
        data-testid="passwordInput"
        name="testPassword"
        placeholder="Password"
        required=""
        type="password"
        value="123456789"
      />
      <span
        class="icon is-small is-left"
      >
        <i
          class="fas fa-lock"
        />
      </span>
      <span
        class="icon is-small is-right"
        data-testid="password.success"
      >
        <i
          class="fas fa-check"
        />
      </span>
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
